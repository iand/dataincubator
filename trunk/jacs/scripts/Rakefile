require 'rubygems'
require 'rake'
require 'rake/clean'
require 'pho'

BASE_DIR="data"

JACS_DIR="#{BASE_DIR}/jacs"
JACS_CACHE_DIR="#{JACS_DIR}/cache"
JACS_DATA_DIR="#{JACS_DIR}/data"

VOID_DATA_DIR="etc"

#TODO: make this neater
CLEAN.include ["#{JACS_DIR}/*.rdf", "#{JACS_DIR}/*.ok", "#{JACS_DIR}/*.fail"]

STORENAME = "http://api.talis.com/stores/jacs"
#if ENV["TALIS_STORE"]
#  STORENAME = ENV["TALIS_STORE"]
#end
#if !STORENAME.start_with?("http")
#  STORENAME = "http://api.talis.com/stores/#{storename}"  
#end

  
STORE = Pho::Store.new(STORENAME, ENV["TALIS_USER"], ENV["TALIS_PASS"])

#Helper function to create data dirs
def mkdirs(base)
  if !File.exists?(BASE_DIR)
    Dir.mkdir(BASE_DIR)
  end  
  if !File.exists?(base)
    Dir.mkdir(base)
  end
  if !File.exists?("#{base}/cache")
    Dir.mkdir("#{base}/cache")
  end
  if !File.exists?("#{base}/data")
    Dir.mkdir("#{base}/data")
  end
end

task :clear_store do
  STORE.reset
end

#Helper function to upload collections of rdf
def upload(base)
  collection = Pho::RDFCollection.new(STORE, base)
  puts "Uploading from to #{STORENAME} from #{base}"
  collection.store()
  puts collection.summary()    
end

#Install required rubygems
task :dependencies do
  sh %{sudo gem install pho}
  sh %{sudo gem install parseexcel}
  sh %{sudo gem install fastercsv}
end

task :init do
  mkdirs(JACS_DIR)      
end


# Crossref

#Download journal list
task :cache_jacs do
  sh %{ curl -s http://www.hesa.ac.uk/dox/jacs/JACS.csv > #{JACS_CACHE_DIR}/JACS.csv }  
  sh %{ iconv --from-code=ISO-8859-1 --to-code=UTF-8 #{JACS_CACHE_DIR}/JACS.csv > #{JACS_CACHE_DIR}/JACS-utf8.csv }
  sh %{ perl -pi -e "s/\\\\\\\\\\\"/'/g" #{JACS_CACHE_DIR}/JACS-utf8.csv }
end

#Convert journal list
task :convert_jacs do
  sh %{ruby bin/convert-jacs.rb #{JACS_CACHE_DIR}/JACS-utf8.csv #{JACS_DATA_DIR} }  
end

task :jacs => [:init, :cache_jacs, :convert_jacs]

#Upload jacs data
task :upload_jacs do
  upload(JACS_DATA_DIR)
end

task :upload_void do
  upload(VOID_DATA_DIR)
end

